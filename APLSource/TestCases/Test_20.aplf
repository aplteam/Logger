 R←Test_20(stopFlag batchFlag);path;isUnicode;list;parmSpace;myLogger;msg;⎕TRAP
⍝ Couple of parameters associated with filenames.
 R←T._Failed
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')

 path←GetFileRoot,'LogFiles'
 isUnicode←80=⎕DR' '
 :If ##.FilesAndDirs.IsDir path
     list←↑##.FilesAndDirs.Dir path,'/*.log'
     ##.FilesAndDirs.DeleteFile list
 :EndIf

 parmSpace←##.Logger.CreatePropertySpace
 parmSpace.debug←1
 parmSpace.autoReOpen←1
 parmSpace.filenamePostfix←'myPostFix'
 parmSpace.filename←'myFilename'
 parmSpace.filenamePrefix←'myPrefix'
 parmSpace.path←GetFileRoot,'LogFiles'

 :Trap 11
     myLogger←⎕NEW ##.Logger(,⊂parmSpace)
 :Else
     →T.FailsIf'"filename" MUST NOT be set with autoReOpen=1'≡1⊃⎕DM
 :EndTrap

 parmSpace.filename←''
 myLogger←⎕NEW ##.Logger(,⊂parmSpace)
 →T.FailsIf parmSpace.filenamePostfix{⍺≢(-⍴⍺)↑⍵}(-1+⍴myLogger.extension)↓myLogger.filename
 →T.FailsIf parmSpace.filenamePrefix{⍺≢(⍴⍺)↑⍵}myLogger.filename

 myLogger.Close
 ⎕EX'myLogger'
 list←↑##.FilesAndDirs.Dir path,'/*.log'
 ##.FilesAndDirs.DeleteFile list

 parmSpace←##.Logger.CreatePropertySpace
 parmSpace.debug←1
 parmSpace.autoReOpen←0
 parmSpace.filenamePostfix←'myPostFix'
 parmSpace.filename←'myFilename'
 parmSpace.filenamePrefix←'myPrefix'
 parmSpace.path←GetFileRoot,'LogFiles'

 myLogger←⎕NEW ##.Logger(,⊂parmSpace)
 →T.FailsIf parmSpace.filenamePostfix{⍺≢(-⍴⍺)↑⍵}(-1+⍴myLogger.extension)↓myLogger.filename
 →T.FailsIf parmSpace.filenamePrefix{⍺≢(⍴⍺)↑⍵}myLogger.filename

 myLogger.Close
 list←↑##.FilesAndDirs.Dir path,'/*.log'
 ##.FilesAndDirs.DeleteFile list

 R←T._OK
