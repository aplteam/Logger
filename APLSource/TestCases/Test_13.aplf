 R←Test_13(stopFlag batchFlag);path;myLogger;list;cs;buffer;⎕TRAP;Okay
⍝ Checks whether "fileFlag" is working properly.
 R←T._Failed
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')

 path←GetFileRoot,'LogFiles'
 :If FilesAndDirs.IsDir path
     list←⊃FilesAndDirs.Dir path,'/*.log'
     FilesAndDirs.DeleteFile list
 :EndIf

 cs←##.Logger.CreatePropertySpace
 cs.printToSession←1
 cs.fileFlag←0
 cs.encoding←'UTf8'
 cs.path←GetFileRoot,'LogFiles'
 myLogger←⎕NEW ##.Logger(,⊂cs)
 →T.FailsIf 0≠myLogger.errorCounter
 myLogger.Log'This should appear in the session but NOT in the log file. It is extralong regarding the ⎕PW settings.'
 myLogger.LogError 1 'This should ALSO appear in the session but NOT in the log file' 'more'
 myLogger.Log'This should ...' '...also appear in ...' '...the session but NOT...' '... in the log file' 'With a very very very very very (indeed!) very long message at the end!'

 :If FilesAndDirs.IsDir path
     list←⊃FilesAndDirs.Dir path,'/*.log'
     →T.FailsIf~0∊⍴list
 :EndIf

 myLogger.fileFlag←1
 myLogger.Log'Third entry'
 myLogger.LogError 1 'Forth entry' 'more'
 myLogger.fileFlag←0
 myLogger.Log'Fifth entry'
 myLogger.LogError 1 'Last entry (number 6)' 'more'

 →T.FailsIf 0≠myLogger.errorCounter

 :If FilesAndDirs.IsDir path
     list←⊃FilesAndDirs.Dir path,'/*.log'
     →T.FailsIf(,1)≢⍴list
 :EndIf

 myLogger.Close
 buffer←⊃FilesAndDirs.NGET(⊃list)1
 buffer←(0<≢¨buffer)/buffer
 →T.FailsIf 4≠⍴buffer
 →T.FailsIf~∧/∨/¨'ERROR' 'Third' 'Forth'⍷¨⊂{⎕ML←3 ⋄ ∊⍵}buffer

 FilesAndDirs.DeleteFile list

 cs←##.Logger.CreatePropertySpace
 cs.printToSession←1
 cs.active←0
 cs.fileFlag←0
 cs.encoding←'UTf8'
 cs.path←GetFileRoot,'LogFiles'
 myLogger←⎕NEW ##.Logger(,⊂cs)
 →T.FailsIf 0≠myLogger.errorCounter
 myLogger.Log'This should appear neither in the session nor in the log file. It is extralong regarding the ⎕PW settings.'
 myLogger.LogError 1 'This should also not appear in the session and in the log file' 'more'   ⍝ Depricated
 myLogger.Log'This should ...' '...also not appear in ...' '...the session and...' '... in the log file' 'With a very very very very very (indeed!) very long message at the end!'

 :If FilesAndDirs.IsDir path
     list←⊃FilesAndDirs.Dir path,'/*.log'
     →T.FailsIf 0≠≢list
 :EndIf

 myLogger.fileFlag←1
 myLogger.Log'Third entry'
 myLogger.LogError 1 'Forth entry' 'more'
 myLogger.fileFlag←0
 myLogger.Log'Fifth entry'
 myLogger.LogError 1 'Last entry (number 6)'

 →T.FailsIf 0≠myLogger.errorCounter

 :If FilesAndDirs.IsDir path
     list←⊃FilesAndDirs.Dir path,'/*.log'
     →T.FailsIf 0≠≢list
 :EndIf

 myLogger.active←1
 myLogger.fileFlag←1
 myLogger.Log'Third entry'
 myLogger.LogError 1 'Forth entry' 'more'
 myLogger.fileFlag←0
 myLogger.Log'Fifth entry'
 myLogger.LogError 1 'Last entry (number 6)' 'more'

 :If FilesAndDirs.IsDir path
     list←⊃FilesAndDirs.Dir path,'/*.log'
     →T.FailsIf 1≢≢list
 :EndIf

 myLogger.Close
 buffer←⊃FilesAndDirs.NGET(⊃list)1
 buffer←(0<≢¨buffer)/buffer
 →T.FailsIf 4≠⍴buffer
 →T.FailsIf~∧/∨/¨'ERROR' 'Third' 'Forth'⍷¨⊂{⎕ML←3 ⋄ ∊⍵}buffer

 R←T._OK
